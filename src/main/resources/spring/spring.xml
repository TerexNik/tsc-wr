<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd
	   					   http://www.springframework.org/schema/context
	   					   http://www.springframework.org/schema/context/spring-context.xsd
	   					   http://www.springframework.org/schema/jee
	   					   http://www.springframework.org/schema/jee/spring-jee.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="ru.tsc" />
    <context:annotation-config/>
    <mvc:annotation-driven />
    <mvc:cors>
        <mvc:mapping path="/**"/>
    </mvc:cors>


    <!--<jee:jndi-lookup id="tscDataSource" jndi-name="${datasource.jndi}"/>-->
    <jee:jndi-lookup id="tscDataSource" jndi-name="jdbc/wrkres"/>

    <bean id="tscEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="tscDataSource">
        <property name="dataSource" ref="tscDataSource"/>
        <property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence"/>
        <qualifier value="tscPersistentUnit"/>
        <property name="persistenceUnitName" value="tscPersistentUnit" />
        <property name="packagesToScan" >
            <list>
                <value>ru.tsc.dao</value>
                <value>ru.tsc.model</value>
                <value>ru.tsc.rest</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.dialect">ru.tsc.dao.CustomOracle10gDialect</prop>
                <prop key="hibernate.connection.datasource">jdbc/wrkres</prop>
            </props>
        </property>
    </bean>

	<bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" depends-on="tscEntityManagerFactory">
		<property name="entityManagerFactory" ref="tscEntityManagerFactory" />
	</bean>

    <tx:annotation-driven transaction-manager="jpaTransactionManager" proxy-target-class="true"/>
    <mvc:interceptors>
        <bean id="webContentInterceptor"
              class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0"/>
        </bean>
    </mvc:interceptors>

    <security:http
            entry-point-ref="RESTAuthenticationEntryPoint"
            authentication-manager-ref="authenticationManager"
            use-expressions="true">

        <security:port-mappings>
            <security:port-mapping http="9083" https="9446"/>
        </security:port-mappings>

        <security:intercept-url pattern="/login" access="permitAll()" requires-channel="https"/>
        <security:intercept-url pattern="/role" access="permitAll()" requires-channel="https"/>
        <!--<security:intercept-url pattern="/employee/**" access="isAuthenticated()" requires-channel="https"/>-->
        <security:intercept-url pattern="/**" access="isAuthenticated()" requires-channel="https"/>

        <security:headers>
            <security:header name="Access-Control-Allow-Origin" value="*"/>
            <security:header name="Access-Control-Allow-Headers" value="Origin, X-Requested-With, Content-Type, Accept"/>
            <security:header name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS"/>
        </security:headers>

        <security:form-login
                login-page="/login"
                username-parameter="username"
                password-parameter="password"
                authentication-success-handler-ref="RESTAuthenticationSuccessHandler"
                authentication-failure-handler-ref="RESTAuthenticationFailureHandler"/>
        <security:csrf disabled="true"/>
        <security:cors configuration-source-ref="corsConfigurationSource"/>
    </security:http>

    <bean id="corsConfigurationSource" class="org.springframework.web.cors.UrlBasedCorsConfigurationSource"/>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider"/>
    </security:authentication-manager>
</beans>